[{"/Users/kalebamarante/graph-eth/graph-eth/packages/react-app/src/index.js":"1","/Users/kalebamarante/graph-eth/graph-eth/packages/react-app/src/App.js":"2","/Users/kalebamarante/graph-eth/graph-eth/packages/react-app/src/graphql/subgraph.js":"3","/Users/kalebamarante/graph-eth/graph-eth/packages/react-app/src/components/index.js":"4"},{"size":1037,"mtime":1655304841087,"results":"5","hashOfConfig":"6"},{"size":3207,"mtime":1655309188027,"results":"7","hashOfConfig":"6"},{"size":277,"mtime":1647716404000,"results":"8","hashOfConfig":"6"},{"size":1057,"mtime":1647716404000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"jz21pd",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/Users/kalebamarante/graph-eth/graph-eth/packages/react-app/src/index.js",[],["20","21"],"/Users/kalebamarante/graph-eth/graph-eth/packages/react-app/src/App.js",["22","23"],"import { useQuery } from \"@apollo/client\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { shortenAddress, useCall, useEthers, useLookupAddress } from \"@usedapp/core\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { Body, Button, Container, Header, Image, Link } from \"./components\";\nimport logo from \"./ethereumLogo.png\";\n\nimport { addresses, abis } from \"@my-app/contracts\";\nimport GET_TRANSFERS from \"./graphql/subgraph\";\nimport { getDefaultProvider } from \"@ethersproject/providers\";\n\n\nasync function readOnChainData() {\n  // Should replace with the end-user wallet, e.g. Metamask\n  const defaultProvider = getDefaultProvider();\n  // Create an instance of an ethers.js Contract\n  // Read more about ethers.js on https://docs.ethers.io/v5/api/contract/contract/\n  const ceaErc20 = new Contract(addresses.ceaErc20, abis.erc20, defaultProvider);\n  // A pre-defined address that owns some CEAERC20 tokens\n  const tokenBalance = await ceaErc20.balanceOf(\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\");\n  console.log({ tokenBalance: tokenBalance.toString() });\n}\n\nfunction WalletButton() {\n  const [rendered, setRendered] = useState(\"\");\n\n  const ens = useLookupAddress();\n  const { account, activateBrowserWallet, deactivate, error } = useEthers();\n\n  useEffect(() => {\n    if (ens) {\n      setRendered(ens);\n    } else if (account) {\n      setRendered(shortenAddress(account));\n    } else {\n      setRendered(\"\");\n    }\n  }, [account, ens, setRendered]);\n\n  useEffect(() => {\n    if (error) {\n      console.error(\"Error while connecting wallet:\", error.message);\n    }\n  }, [error]);\n\n  return (\n    <Button\n      onClick={() => {\n        if (!account) {\n          activateBrowserWallet();\n        } else {\n          deactivate();\n        }\n      }}\n    >\n      {rendered === \"\" && \"Connect Wallet\"}\n      {rendered !== \"\" && rendered}\n    </Button>\n  );\n}\n\nfunction App() {\n  // Read more about useDapp on https://usedapp.io/\n  const { error: contractCallError, value: tokenBalance } =\n    useCall({\n       contract: new Contract(addresses.ceaErc20, abis.erc20),\n       method: \"balanceOf\",\n       args: [\"0x3f8CB69d9c0ED01923F11c829BaE4D9a4CB6c82C\"],\n    }) ?? {};\n\n  const { loading, error: subgraphQueryError, data } = useQuery(GET_TRANSFERS);\n\n  useEffect(() => {\n    if (subgraphQueryError) {\n      console.error(\"Error while querying subgraph:\", subgraphQueryError.message);\n      return;\n    }\n    if (!loading && data && data.transfers) {\n      console.log({ transfers: data.transfers });\n    }\n  }, [loading, subgraphQueryError, data]);\n\n  return (\n    <Container>\n      <Header>\n        <WalletButton />\n      </Header>\n      <Body>\n        <Image src={logo} alt=\"ethereum-logo\" />\n        <p>\n          Edit <code>packages/react-app/src/App.js</code> and save to reload.\n        </p>\n        <Button onClick={() => readOnChainData()}>\n          Read on chain Balance\n        </Button>\n        <Link href=\"https://reactjs.org\">\n          Learn React\n        </Link>\n        <Link href=\"https://usedapp.io/\">Learn useDapp</Link>\n        <Link href=\"https://thegraph.com/docs/quick-start\">Learn The Graph</Link>\n      </Body>\n    </Container>\n  );\n}\n\nexport default App;\n","/Users/kalebamarante/graph-eth/graph-eth/packages/react-app/src/graphql/subgraph.js",[],"/Users/kalebamarante/graph-eth/graph-eth/packages/react-app/src/components/index.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":65,"column":18,"nodeType":"30","messageId":"31","endLine":65,"endColumn":35},{"ruleId":"28","severity":1,"message":"32","line":65,"column":44,"nodeType":"30","messageId":"31","endLine":65,"endColumn":56},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'contractCallError' is assigned a value but never used.","Identifier","unusedVar","'tokenBalance' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]